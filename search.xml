<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>java命名规范</title>
    <url>/ri-zhi/java-ming-ming-gui-fan/</url>
    <content><![CDATA[<hr>
<p>##java命名规范</p>
<p>###项目名</p>
<ol>
<li>如果只有一个单词就<strong>全部小写</strong></li>
<li>两个以上的单词就用 “-”进行分隔,小写<br>可以看到github上面一些著名的开源项目比如apache和spring-boot都是小写，以 xxx-xxx的形式来命名<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:1.jpg" alt="图片"><br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:2.jpg" alt="图片"></li>
</ol>
<p>###包名</p>
<ol>
<li><strong>全部小写</strong></li>
<li>规则可以按[域名反转].[团队名].[项目名].[一级模块].[二级模块]..[N级模块].[类]的格式进行划分，如果功能更多，可以进行更细的包划分<br>如果是组织的话就用 org.xxx.xxx ,比如阿里的dubbo项目<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:3.jpg" alt="图片"><br>如果是公司的项目，就用com.公司名.项目名,比如唯品会的vjtools<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:4.jpg" alt="图片"><br>携程的apollo项目<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:5.jpg" alt="图片"></li>
</ol>
<p>###类名、接口名</p>
<ol>
<li>无论类名只有一个单词或者多个单词组成，<strong>每个单词的首字母都要大写</strong><br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:1.jpg" alt="图片"></li>
<li>功能性的类可以使用特定关键词作为标记<br>实现类用impl结尾<br>接口+impl<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:7.jpg" alt="图片"><br>抽象类使用Abstract做为类命名的开头<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:8.jpg" alt="图片"><br>异常类命名使用“Exception”做为类命名的结尾<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:9.jpg" alt="图片"><br>单元测试类使用“ Test”做为类命名的结尾<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:10.jpg" alt="图片"></li>
</ol>
<p>###变量名</p>
<ol>
<li>普通变量名<br> • 同方法的命名，一般为名词，<strong>小写</strong>。如：int index=0;<br> • 变量名当有多个单词组成时，<strong>第一个单词首字母小写，后一个单词的首字母大写</strong>（如：myName）</li>
<li>常量名（静态变量名）</li>
<li><strong>全部字母大写</strong></li>
<li>多个单词用<em>下划线分隔</em>。如：public static final String GAME_COLOR=”RED”;<br>(看看Long类源码的定义)<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:11.jpg" alt="图片"></li>
</ol>
<p>###属性文件properties<br>以<strong>下划线</strong>隔开。<br>如：errors_zh_CN.properties， hibernate_test.properties</p>
<p>###数据库命名：<br>表、字段命名<strong>全部大写</strong>，多个单词以 _ 隔开</p>
<p>###注释：</p>
<ol>
<li><strong>注释规范</strong></li>
<li>单行<br><code>// 这是一个单行注释</code></li>
<li>多行 <pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** 这是一个多行注释
可以有多行*/</span></code></pre>
</li>
</ol>
<p><strong>基本规则：</strong></p>
<ul>
<li>以上的名称的组成元素只能是字母、数字、下划线、$符号</li>
<li>不要用数字开头</li>
<li>名称不能使用Java的关键字，比如idea在新建包名的时候出现关键字就会提示包名不合法</li>
<li>不要出现中文及拼音命名(有些方法命名又有拼音又有英文，就会显得四不像)<br>附(Java关键字列表)：<br><img src="https://github.com/wenzonghui/store-something/blob/master/2020:1:6:12.jpg" alt="图片"></li>
</ul>
<ol start="2">
<li><strong>属性注释</strong><br>在每个属性前面必须加上属性注释，注释模板如下：<pre><code>/** 提示信息 */
private String strMsg = null;</code></pre></li>
<li><strong>方法注释</strong><br>在每个方法前面必须加上方法注释，注释模板如下：<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* @param 参数1               参数1的使用说明
* @return                   返回结果的说明
* @throws 异常类型.错误代码    注明从此类方法中抛出异常的说明
*/</span></code></pre>
</li>
<li><strong>构造方法注释</strong><br> • 在每个构造方法前面必须加上注释，注释模板如下：<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* @param 参数1              参数1的使用说明
* @throws 异常类型.错误代码   注明从此类方法中抛出异常的说明
*/</span></code></pre>
</li>
<li><strong>方法内部注释</strong><br>在方法内部使用单行或者多行注释，该注释根据实际情况添加。如：<pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//背景颜色</span>
Color bgColor <span class="token operator">=</span> Color<span class="token punctuation">.</span>RED</code></pre>
</li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建</title>
    <url>/ri-zhi/bo-ke-da-jian/</url>
    <content><![CDATA[<hr>
<p>##博客搭建<br>经过几天的学习，成功搭建了这个博客。以后就作为自己记录和分享的后花园。希望自己能够成为这个行业的大牛，也能够通过自己的分享来帮助后来人。</p>
<h3 id="博客分为：日志、分类、标签、关于等几项内容"><a href="#博客分为：日志、分类、标签、关于等几项内容" class="headerlink" title="博客分为：日志、分类、标签、关于等几项内容"></a>博客分为：日志、分类、标签、关于等几项内容</h3><pre class=" language-html"><code class="language-html">日志：用来记录生活琐事，所想所感
分类：通过标签来将文章分类
标签：来标识文章</code></pre>
<h3 id="此博客使用markdown"><a href="#此博客使用markdown" class="headerlink" title="此博客使用markdown"></a>此博客使用markdown</h3><h5 id="以下为markdown学习笔记"><a href="#以下为markdown学习笔记" class="headerlink" title="以下为markdown学习笔记"></a>以下为markdown学习笔记</h5><p><strong>1、标题</strong><br>标题的语法是：# 标题。前面的#号个数表示标题的级别，1个#表示一级标题，2个#号表示二级标题，以次类推，最多6级。如下所示，括号内容表示在markdown中输入的内容。</p>
<pre class=" language-ruby"><code class="language-ruby"><span class="token comment" spellcheck="true">#       一级标题</span>
<span class="token comment" spellcheck="true">##      二级标题</span>
<span class="token comment" spellcheck="true">###     三级标题</span>
<span class="token comment" spellcheck="true">####    四级标题</span>
<span class="token comment" spellcheck="true">#####   五级标题</span>
<span class="token comment" spellcheck="true">######  六级标题</span></code></pre>
<p><strong>2、列表</strong></p>
<p><strong>2.1</strong> 有序列表，格式是：1. xxx 即，数字接着一个英文句点开头。</p>
<pre class=" language-html"><code class="language-html">1. Item1
2. Item2
    2.1. Item2.1
    2.2. Item2.2</code></pre>
<p><strong>2.2</strong> 无序列表，格式是：以“-”或“*”或“+”开头即可。注意，开头符号与内容之间有一个空格！</p>
<ul>
<li>Item1     <code>- Item1</code></li>
</ul>
<ul>
<li>Item2     <code>+ Item2</code></li>
</ul>
<ul>
<li>Item3     <code>* Item3</code></li>
</ul>
<p><strong>3、强调</strong></p>
<p><em>这是斜体</em>      <code>*这是斜体*</code><br><em>这是斜体</em>      <code>_这是斜体_</code><br><strong>这是加粗</strong>    <code>**这是加粗**</code><br><strong>这是加粗</strong>    <code>__这是加粗__</code><br><del>这是删除</del>    <code>~~这是删除~~</code></p>
<p><strong>4、代码引用</strong></p>
<p><strong>4.1</strong> 引用讲话<br>正如xxx所说：</p>
<blockquote>
<p>balabalabala<br>bbbbbbbbbbbbbbbbb</p>
</blockquote>
<p><strong>4.2</strong> 一行代码可以用“ ` ”号将代码包围起来。<br>例如：<code>这是一行代码</code><br><code>this is a line of code</code></p>
<p><strong>4.3</strong> 如果是多行代码，可以将“ ``` ”置于代码的首行和末行。<br>例如：</p>
<pre class=" language-html"><code class="language-html">第一行代码
第二行代码
...
第N行代码</code></pre>
<pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>示例代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>使用“ ``` ”将代码包围起来，“ ``` ”后面可以跟语言的类型，例如“ ```html  ...代码部分...``` ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<p><strong>5、分割线</strong></p>
<pre><code>___或者
---或者
***</code></pre><hr>
<hr>
<hr>
<p><strong>6、超链接</strong></p>
<p><strong>6.1</strong> 文字链接，格式是：<strong>[文本](链接)</strong></p>
<p><a href="http://github.com" target="_blank" rel="noopener">GitHub</a> <code>[GitHub](http://github.com)</code></p>
<p><strong>6.2</strong> 图片链接，格式是：<strong>![文本](图片链接)</strong></p>
<pre><code>![图片](https://cn.bing.com/th?id=OHR.TrakaiLithuania_ROW2474089682_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp)</code></pre><p><img src="https://cn.bing.com/th?id=OHR.TrakaiLithuania_ROW2474089682_1920x1080.jpg&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp" alt="图片"></p>
<p><strong>6.3</strong> 插入音频，使用插件 hexo-tag-aplayer<br>从网易云网站获取音乐链接</p>
<pre><code>&lt;iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=1&amp;height=66"&gt;&lt;/iframe&gt;</code></pre><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=34341360&amp;auto=1&amp;height=66"></iframe>

<p><strong>6.4</strong> 插入视频，使用iframe<br>从视频网站获得视频资源</p>
<pre><code>&lt;iframe src="//player.bilibili.com/player.html?aid=6117110&amp;cid=9931722&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"&gt; &lt;/iframe&gt;</code></pre><iframe src="//player.bilibili.com/player.html?aid=6117110&amp;cid=9931722&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>


<p><strong>7、表格</strong></p>
<pre><code>苹果    |草莓  |石榴
-|-|-
苹果    |草莓  |石榴
苹果    |草莓  |石榴
苹果    |草莓  |石榴 </code></pre><table>
<thead>
<tr>
<th>苹果</th>
<th>草莓</th>
<th>石榴</th>
</tr>
</thead>
<tbody><tr>
<td>苹果</td>
<td>草莓</td>
<td>石榴</td>
</tr>
<tr>
<td>苹果</td>
<td>草莓</td>
<td>石榴</td>
</tr>
<tr>
<td>苹果</td>
<td>草莓</td>
<td>石榴</td>
</tr>
</tbody></table>
<pre><code>|dog  | bird | cat |
|-----|------|-----|
|bar  | bear | box |
|bar  | bear | box |</code></pre><table>
<thead>
<tr>
<th>dog</th>
<th>bird</th>
<th>cat</th>
</tr>
</thead>
<tbody><tr>
<td>bar</td>
<td>bear</td>
<td>box</td>
</tr>
<tr>
<td>bar</td>
<td>bear</td>
<td>box</td>
</tr>
</tbody></table>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>日志</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
